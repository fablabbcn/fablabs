version: '2.2'

services:
  redis:
    image: redis:4
    hostname: redis
    restart: always

  # service configuration for Postgres
  db:
    # use the preferred version of the official Postgres image
    # see https://hub.docker.com/_/postgres/
    image: postgres:10
    restart: always
    hostname: db1
    # persist the database between containers by storing it in a volume
    volumes:
      - fablabs-postgres:/var/lib/postgresql/data
      #- ./dump:/dump

  # service configuration for our dockerized Rails app
  app:
    env_file: .env
    # use the Dockerfile next to this file
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/fablabs
      - /fablabs/tmp
    depends_on:
      - db
      - redis
      - memcached
    container_name: app
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - VIRTUAL_PORT=${VIRTUAL_PORT}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    ports:
      - "3000:3000"
    restart: always
    #command: rails s

  worker:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /fablabs/tmp
    volumes_from:
      - app
    command: bash -c "sleep 3 && bundle exec sidekiq -e $RAILS_ENV"
    restart: always
    depends_on:
      - app
      - db

  memcached:
    image: memcached:1.5.3
    restart: always
    expose:
      - 11211


  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      # unset this for real certs
      #- ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
      - NGINX_PROXY_CONTAINER=nginx

volumes:
  fablabs-postgres:
