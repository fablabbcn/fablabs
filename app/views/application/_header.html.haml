= render "application/please_verify" if current_user and current_user.unverified?
- if flash.any?
  - flash.each do |name, msg|
    = content_tag :div, msg, class: flash_class(name)
%nav.navbar.navbar-default
  .container
    .navbar-header
      %button.navbar-toggle.collapsed{"aria-controls" => "navbar", "aria-expanded" => "false", "data-target" => "#navbar", "data-toggle" => "collapse", :type => "button"}
        %span.sr-only Toggle navigation
        %span.icon-bar
        %span.icon-bar
        %span.icon-bar

      = link_to root_path, class: 'navbar-brand' do
        = image_tag "circle-logo.png", id: 'logo'

    #navbar.collapse.navbar-collapse

      = form_tag '/search', class: 'navbar-form navbar-left', method: 'get' do
        .form-group
          - if params[:country].present?
            = hidden_field_tag 'country', params[:country]
          = text_field_tag 'q', params[:q], class: 'form-control', autocomplete: 'off', placeholder: t("views.header.search"), id: 'search-box'

      %ul.nav.navbar-nav
        %li
          = link_to t("views.header.labs"), labs_path
        %li
          = link_to t("views.header.organizations"), organizations_path
        %li
          = link_to t("views.header.machines"), machines_path
        %li
          = link_to t("views.header.projects"), projects_path



      %ul.nav.navbar-nav.navbar-right
        %li= link_to 'Discuss', 'https://discuss.fablabs.io/'
        - if current_user
          %li.dropdown
            = link_to current_user do

              = image_tag hocho(current_user.avatar, "o=t&q=80&d=90x90"), class: 'avatar tiny'
              = t("views.header.me")
              - if current_or_null_user.has_role? :superadmin
                = gem_count_tag Lab.with_unverified_state.size
              - else
                - if current_or_null_user.is_referee? or current_or_null_user.is_unique_referee?
                  = gem_count_tag current_or_null_user.referees_count
          %li
            %a.dropdown-toggle{data: {toggle: 'dropdown'}}
              %span.caret
            %ul.dropdown-menu
              %li
                = link_to settings_path do
                  = fa_icon "cog", text: t("views.header.settings")
              - if current_or_null_user.has_role? :superadmin
                %li
                  = link_to backstage_root_path do
                    = fa_icon "gamepad"
                    = t("views.header.backstage", default: "Backstage")
                    = gem_count_tag Lab.with_unverified_state.size
              - else
                - if current_or_null_user.is_referee? or current_or_null_user.is_unique_referee?
                  %li
                    = link_to backstage_root_path do
                      = fa_icon "gamepad"
                      = t("views.header.backstage", default: "Backstage")
                      = gem_count_tag current_or_null_user.pending_referee_labs.count

              %li.divider{:role => "separator"}
              %li
                = link_to signout_path do
                  = fa_icon "sign-out", text: t("views.header.signout", default: "Sign out")

        - else
          %li= link_to t("views.header.signin", default: "Sign in"), signin_path
          %li= link_to t("views.header.signup", default: "Sign up"), signup_path
