= simple_form_for lab, html: { class: 'form-horizontal' } do |f|
  = render 'form_errors', resource: lab

  - if lab.workflow_state != "approved"
    %fieldset
      %legend
        Important Information

      .row
        .col-lg-12
          %h5
            Please select 3 Referee Labs.
          %p
            Please choose 3 of the Referee Labs available and contact them, they will approve you after you have exchanged more information with them. The list of Referee Labs is limited to some Fab Labs with experience and a history of collaborating with the global Fab Lab Network, at the moment it is not possible to choose Referee Labs outside that list. It's not important that you already know them, it's important that you start a discussion with them. We are doing this so that the connections among the Labs (especially for new Labs) get strengthened.

          = render 'referees', :f => f

      .row
        .col-lg-12
          %h5
            Please select a Parent Lab
          %p
            Is this Lab connected to another Lab? If so, which Lab?
          = f.input :parent_id, as: 'select', collection: Lab.with_approved_state.order('name ASC'), input_html: { class: 'enhanced' }

  %fieldset
    %legend Basic Details

    = f.input :name, label: 'Fab Lab Name'

    %p
      What kind of Fab Lab is your Lab?
    - Lab::Kinds.each_with_index do |m, index|
      .col-lg-2
        .radio-inline
          %span
            = f.radio_button :kind, index
            %label.radio{style: "width: 160px;"}
              = m.humanize.titleize

    .row
      .col-lg-12
        %p Fab Lab Activity

    .row
      - Lab::ACTIVITY_STATUS.each do |status|
        .col-lg-2
          .radio-inline
            %span
              = f.radio_button :activity_status, status, class: 'activity-status-radio'
              %label.radio{style: "width: 160px;"}
                = status.humanize.titleize

    .row
      .col-lg-4
        = f.input :activity_start_at, as: 'string', input_html: {class: 'datepicker', "data-date-format" => "yyyy-mm-dd"}
      .col-lg-4
        = f.input :activity_inaugurated_at, as: 'string', input_html: {class: 'datepicker' , "data-date-format" => "yyyy-mm-dd"}
      .col-lg-4
        = f.input :activity_closed_at, as: 'string', input_html: {class: 'datepicker' , "data-date-format" => "yyyy-mm-dd"}



  %fieldset
    %legend  What qualifies as a Fab Lab
    %p
      Fab Labs have a list of qualities and requirements that defines them.
      More information can be found
      %a{href: "http://www.fabfoundation.org/index.php/what-qualifies-as-a-fab-lab/index.html"} here.

    .col-lg-2
      .radio-inline
        = f.radio_button :charter, 1
        %label.radio{style: "width: 80%;"}
          Charter: You need to agree with the
          = succeed "." do
            %a{:href => "http://fab.cba.mit.edu/about/charter/"} Fab Charter

    .col-lg-2
      .radio-inline
        = f.radio_button :tools, 1
        %label.radio{style: "width: 80%;"}
          Tools: The submitted Fab Lab has a compatible set of tools related with the
          = succeed "." do
            %a{:href => "http://fab.cba.mit.edu/about/fab/inv.html"} official Fab Lab inventory.

    .col-lg-2
      .radio-inline
        = f.radio_button :network, 1
        %label.radio{style: "width: 80%;"}
          Network: The submitted Fab Lab commits to participate in the network activities: regional meetings, FABX conferences,
          = succeed "." do
            %a{:href => "https://discuss.fablabs.io/"} the Discuss section on FabLabs.io.

    .col-lg-2
      .radio-inline
        = f.radio_button :programs, 1
        %label.radio{style: "width: 80%;"}
          Programs: Our staff is (or will be) trained in the
          %a{:href => "http://fabacademy.org/"} Fab Academy
          or compatible programs.

    .col-lg-2
      .radio-inline
        = f.radio_button :public, 1
        %label.radio{style: "width: 80%;"}
          Access: Public access to the Fab Lab is essential.

  %fieldset
    %legend Description

    = f.input :blurb, as: 'text', hint: 'A very brief overview of the lab, maybe include what it specializes in. <span id="description-count"></span> characters available.'.html_safe, input_html: { rows: 3, data: { limit: 200, counter: '#description-count'} }

    = f.input :description, hint: 'An in-depth description of the lab', input_html: { style: 'height: 8em' }

    = f.input :slug, hint: "This is the unique 'username' of the lab, it will be in the URL" do
      .input-group
        %span.input-group-addon= "#{Rails.application.config.url}/"
        = f.input_field :slug, class: 'form-control'

  %fieldset
    %legend Lab Images

    .row
      .col-lg-3= image_tag @lab.avatar.url, class: 'avatar big'
      .col-lg-9
        = f.input :avatar, as: :file, label: 'Avatar', hint: "This will be a square image next shown next to the lab name throughout the site"
        = f.hidden_field :retained_avatar

    %hr/
    .row
      .col-lg-3
        - if @lab.header.present?
          = image_tag @lab.header.url, class: 'avatar big'
      .col-lg-9
        = f.input :header, as: :file, label: 'Header', hint: "A single (large) photo of your lab. You will be able to add more photos soon."
        = f.hidden_field :retained_header

  %fieldset
    %legend Lab Location
    .address
      %fieldset
        %legend Step 1
        %p.hint Enter the lab's address in the textbox below. Then drag the map marker to pinpoint its exact position.
        = f.input :geocomplete, input_html: { id: 'geocomplete', data: { latlng: "#{@lab.latitude}, #{@lab.longitude}"} }, label: false
      %fieldset.step-2
        %legend Step 2
        %p.hint Edit the details in the address fields below.
        .row
          .col-lg-6#map-holder
            #location-picker-map
          .col-lg-6
            = f.input :address_1, input_html: { data: {geo: "street_address"}}, label: 'Lab Address', placeholder: 'Address Line 1'
            = f.input :address_2, label: false, placeholder: 'Address Line 2 (Optional)'
            = f.input :city, input_html: { data: {geo: "locality"}}
            = f.input :county, label: 'State/Province/County'

            = f.input :postal_code, input_html: { data: {geo: "postal_code"}}
            = f.input :country_code, as: 'country', label: 'Country', input_html: { data: {geo: "country_short"} }, wrapper_html: { class: 'boo'}, iso_codes: true#, input_html: { class: 'enhanced'}
            = f.input :latitude, as: :hidden, input_html: { data: {geo: "lat"}}
            = f.input :longitude, as: :hidden, input_html: { data: {geo: "lng"}}
            = f.input :zoom, as: :hidden
        %hr/
        = f.input :address_notes, hint: 'Any details that might be useful for someone trying to find the lab. For example, "Go up the stairs and through the red door".'

  %fieldset
    %legend Lab Contact Details
    = f.input :phone, hint: "A general enquiries phone number for the lab", label: "Lab Phone Number"
    = f.input :email, hint: "A general enquiries email address for the lab", label: "Lab Email Address"

  - if @lab.new_record?
    %fieldset
      %legend Your Role
      %p.hint What is your association with this lab?
      = f.simple_fields_for :employees do |e|
        = e.input :job_title, placeholder: "e.g. Lab Manager"
        = e.input :description, placeholder: "e.g. Coordinates Workshops and Events"

  = render 'form_links', f: f

  %fieldset
    %legend Capabilities
    = f.input :capabilities, as: 'check_boxes', inline_label: true, item_wrapper_class: 'checkbox_container', label: false, collection: Lab::Capabilities.map{|f| [ I18n.t("capabilities.#{f}"), f]}, checked: f.object.capabilities, hint: "Check all of the boxes that apply to this lab"

    - @collection = Machine.includes(:brand)
    - @selected = @lab.machines.map{|u| u.id}.collect

    - if lab.new_record?
      %p You will be able to add individual machines once your lab is approved.
    - else
      %label{for: "facilities_attributes"}
        Machine
        = select_tag :facilities_attributes, options_from_collection_for_select(@collection, :id, :name, @selected), { multiple: true, size: 10, name: 'lab[facilities_attributes][][thing_id]', class: 'machine_selection_attributes'}

    = f.input :tools_list, hint: "Please list any machines that you have so that we can add them to the directory.", input_html: { style: "height: 8em" }, placeholder: "e.g. Makerbot Industries - Makerbot 2"

  - if @lab.new_record?
    %fieldset
      %legend Anything else?
      = f.input :application_notes

  = f.submit (lab.new_record? ? 'Add Lab' : 'Update Lab'), class: 'btn btn-success btn-lg'
